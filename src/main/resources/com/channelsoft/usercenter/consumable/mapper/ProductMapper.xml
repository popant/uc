<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.channelsoft.usercenter.consumable.mapper.ProductMapper" >
  <resultMap id="BaseResultMap" type="com.channelsoft.usercenter.consumable.po.Product" >
    <id column="product_id" property="productId" jdbcType="INTEGER" />
    <result column="product_name" property="productName" jdbcType="VARCHAR" />
    <result column="product_desc" property="productDesc" jdbcType="VARCHAR" />
    <result column="product_order" property="productOrder" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    product_id, product_name, product_desc, product_order
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.channelsoft.usercenter.consumable.po.ProductExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from product
    where product_id = #{productId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from product
    where product_id = #{productId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.channelsoft.usercenter.consumable.po.ProductExample" >
    delete from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.channelsoft.usercenter.consumable.po.Product" >
    insert into product (product_id, product_name, product_desc, 
      product_order)
    values (#{productId,jdbcType=INTEGER}, #{productName,jdbcType=VARCHAR}, #{productDesc,jdbcType=VARCHAR}, 
      #{productOrder,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.channelsoft.usercenter.consumable.po.Product" >
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="productId != null" >
        product_id,
      </if>
      <if test="productName != null" >
        product_name,
      </if>
      <if test="productDesc != null" >
        product_desc,
      </if>
      <if test="productOrder != null" >
        product_order,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="productId != null" >
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="productName != null" >
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productDesc != null" >
        #{productDesc,jdbcType=VARCHAR},
      </if>
      <if test="productOrder != null" >
        #{productOrder,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.channelsoft.usercenter.consumable.po.ProductExample" resultType="java.lang.Integer" >
    select count(*) from product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update product
    <set >
      <if test="record.productId != null" >
        product_id = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.productName != null" >
        product_name = #{record.productName,jdbcType=VARCHAR},
      </if>
      <if test="record.productDesc != null" >
        product_desc = #{record.productDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.productOrder != null" >
        product_order = #{record.productOrder,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update product
    set product_id = #{record.productId,jdbcType=INTEGER},
      product_name = #{record.productName,jdbcType=VARCHAR},
      product_desc = #{record.productDesc,jdbcType=VARCHAR},
      product_order = #{record.productOrder,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.channelsoft.usercenter.consumable.po.Product" >
    update product
    <set >
      <if test="productName != null" >
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productDesc != null" >
        product_desc = #{productDesc,jdbcType=VARCHAR},
      </if>
      <if test="productOrder != null" >
        product_order = #{productOrder,jdbcType=INTEGER},
      </if>
    </set>
    where product_id = #{productId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.channelsoft.usercenter.consumable.po.Product" >
    update product
    set product_name = #{productName,jdbcType=VARCHAR},
      product_desc = #{productDesc,jdbcType=VARCHAR},
      product_order = #{productOrder,jdbcType=INTEGER}
    where product_id = #{productId,jdbcType=INTEGER}
  </update>
  
  <select id="getProducts" parameterType="Integer" resultType="com.channelsoft.usercenter.consumable.po.Product">
  	SELECT product_id AS productId,
  	product_name AS productName,
  	product_desc AS productDesc,
  	product_order AS productOrder
  	from product 
  	where product_id in (
  		select product_id from enterprise_product_rela
  		where enterprise_id = #{entId}
  		and status = 4
  	)
  	order by product_order ASC
  </select>
   <select id="getProductsDetail" parameterType="String" resultMap="AjaxResultMap">
  	SELECT p.product_id AS productId,
  	r.id AS id,
  	p.product_name AS productName,
  	p.product_desc AS productDesc,
  	r.enterprise_id AS enterpriseId,
  	r.status AS status,
  	p.product_order AS productOrder
  	from product p,enterprise_product_rela r
  	where r.product_id=p.product_id AND r.`enterprise_id`=#{entId,jdbcType=VARCHAR}
  	order by product_order ASC
  </select>
  <resultMap id="AjaxResultMap" type="com.channelsoft.usercenter.business.po.EnterpriseProductAjax" >
    <result column="status" property="status" jdbcType="SMALLINT" typeHandler="com.channelsoft.usercenter.account.po.typeHandler.ProductStatusHandler" />
  </resultMap>
    <select id="getProductsNotOpen" parameterType="String" resultType="com.channelsoft.usercenter.consumable.po.Product">
  	SELECT product_id AS productId,
  	product_name AS productName,
  	product_desc AS productDesc,
  	product_order AS productOrder
  	from product 
  	where product_id not in (
  		select product_id from enterprise_product_rela
  		where enterprise_id = #{entId}
  	)
  	order by product_order ASC
  </select>
</mapper>